jQuery(function($) {

    var updateLayoutData = function(element, layout, breakpointName) {
        element.attr('data-layout-breakpoint', breakpointName || '');
        element.attr('data-layout-cols', layout.cols || false);
        element.attr('data-layout-rows', layout.rows || false);

        var hasSlider = layout.type === 'slider';
        var isLoaded = element.hasClass('owl-loaded');

        if ( hasSlider && !isLoaded ) {
            element.addClass('owl-carousel owl-theme').removeClass('off');
            element.owlCarousel({
                responsiveClass: true,
                responsiveBaseElement: element,
                nav: false,
                items: 1,
                loop: true
            });
        } else {
            element.removeClass('owl-carousel owl-theme').addClass('off').trigger('destroy.owl.carousel');
            element.find('.owl-stage-outer').children(':eq(0)').unwrap();
        }

        var elementItems = element.find('[data-layout-item-index]');
        elementItems.removeAttr('data-layout-item-col-span').removeAttr('data-layout-item-row-span');
        if ( layout.hasOwnProperty('items') ) {
            var items = layout['items'];
            for (index in items) {
                var item = items[index];
                var elementItem = elementItems.eq(index);
                var colSpan = parseInt( item.colSpan ) || 0;
                if ( colSpan > 1 ) {
                    elementItem.attr('data-layout-item-col-span', colSpan);
                }
                var rowSpan = parseInt( item.rowSpan ) || 0;
                if ( rowSpan > 1 ) {
                    elementItem.attr('data-layout-item-row-span', rowSpan);
                }
            }
        }
    };

    var updateLayoutsData = function(elements, layout, breakpointName) {
        elements.each(function() {
            updateLayoutData($(this), layout, breakpointName);
        });
    };

    var setLayoutData = function(elements, layout, min, max, breakpointName) {
        max = max || 99999;
        var mediaQuerie = '(min-width: ' + min + 'px) and (max-width: ' + max + 'px)';
        var querie = window.matchMedia(mediaQuerie);
        querie.addListener(
            function(x) {
                if (x.matches) {
                    updateLayoutsData(elements, layout, breakpointName);
                }
            }
        );
        elements.addClass('initialized');
        elements.each(function() {
            var children = $(this).children();
            $.each(children, function(index, child) {
                $(child).attr('data-layout-item-index', index);
            });
        });
    };

    var initLayout = function(layoutName, layout) {
        var className = layoutName.replace(/_/g, '-');
        var allElements = $('.' + className);
        if ( !allElements.length ) { return; }

        var elements = allElements.filter(':not(.initialized)');
        if ( !elements.length ) { return; }

        if (typeof layout === 'object') {
            var active = Object.keys(layout)[0];
            var prevBreakpoint = activeBreakpoint = 0;
            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;

            var layoutKeys = Object.keys(layout).reverse();
            layoutKeys.forEach(function(key) {
                var currentLayout = layout[key];
                var breakpoint = parseInt( currentLayout.breakpoint || 99999 );
                if ( width > activeBreakpoint && width <= breakpoint ) {
                    active = key;
                    activeBreakpoint = breakpoint;
                }
                setLayoutData(elements, currentLayout, prevBreakpoint, breakpoint, key);
                prevBreakpoint = breakpoint + 1;
            });

            updateLayoutsData(elements, layout[active], active);
        }
    };

    $(document).on("initLayouts", function() {
        if (typeof layouts === 'object') {
            for (key in layouts) {
                initLayout(key, layouts[key]);
            }
        }
    });
    $(document).trigger('initLayouts');
});